name: release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 11 * * 1'
env:
  CACHE_IAMGE_TAG: ${{ github.sha }}
  CACHE_IAMGE_NAME: ./image-cache/cat_${{ github.sha }}.tar
jobs:
  build:
    permissions:
      contents: read
    name: Build
    runs-on: production
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.5
      - name: Build with Mavn
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create test-builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: test-builder
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and export
        run: docker build . --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:$CACHE_IAMGE_TAG
      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ssr-devsecops-cat
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$CACHE_IAMGE_TAG
